services:
  # Web application (Flask)
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: webapp
    ports:
      - "5000:5000"
    restart: always

  # Web server accessible at http://127.0.0.1/ (proxies to webapp)
  nginxwebsvr:
    image: nginx:alpine
    container_name: nginxwebsvr
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - webapp
    restart: always

  # Local Git server
  git-server:
    build:
      dockerfile: gitserver.Dockerfile
      context: .
    container_name: git-server
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./repos:/var/www/git

  # MySQL database
  mysqldb:
    image: mysql:8.0
    container_name: mysqldb
    restart: always
    volumes:
      - ./mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 2302032@SIT.singaporetech.edu.sg
      MYSQL_DATABASE: testdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: 2302032@SIT.singaporetech.edu.sg

  # SonarQube accessible at http://127.0.0.1:9000/
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - sonardb
    ports:
      - "9000:9000"
      - "9092:9092"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonardb:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  # PostgreSQL database for SonarQube
  sonardb:
    image: postgres:latest
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_data: